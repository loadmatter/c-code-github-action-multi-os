# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.repository.name }}-${{ github.sha }}
          release_name: Release v-${{ github.event.repository.name }}-${{ github.sha }}
          draft: false
          prerelease: false

  build-matrix:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        kind: ['osx','linux']
        include:
          - kind: osx
            target: osx-x64
            os: macos-latest

          - kind: linux
            target: linux-x64
            os: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v2
      
      - name: build process
        run: |
          gcc main.c
          mv a.out main_${{ runner.os }}
          chmod +x main_${{ runner.os }}
          zip ${{ runner.os }} main_${{ runner.os }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ runner.os }}.zip
          asset_name: ${{ runner.os }}.zip
          asset_content_type: application/zip
